# GitMesh Database Migrations

This directory contains Alembic database migrations for GitMesh backend.

## Migration Commands (Run in sequence)

### Initial Setup (Already completed)
```bash
# 1. Generate initial migration
alembic revision --autogenerate -m "initial_migration"

# 2. Apply the migration
alembic upgrade head
```

### For Future Model Changes
```bash
# 1. After modifying database models, generate new migration
alembic revision --autogenerate -m "description_of_changes"

# 2. Apply the new migration
alembic upgrade head
```

### Useful Commands
```bash
# Check current migration status
alembic current

# Show migration history
alembic history

# Show pending migrations
alembic show head

# Downgrade to previous migration
alembic downgrade -1

# Upgrade to specific revision
alembic upgrade <revision_id>

# Show SQL without executing
alembic upgrade head --sql

# Mark migration as applied without running
alembic stamp head
```

### Migration Workflow
1. Make changes to models in `/models/database/`
2. Generate migration: `alembic revision --autogenerate -m "description"`
3. Review the generated migration file in `/versions/`
4. Apply migration: `alembic upgrade head`
5. Test your changes

### Important Notes
- **Always backup your database** before running migrations in production
- **Review generated migrations** before applying them
- **Test migrations** in development environment first
- **Migrations are NOT automatic** - run them manually
- Run commands from the `/backend/` directory with virtual environment activated

### Database Configuration
- **Provider**: Supabase PostgreSQL
- **Host**: aws-1-ap-south-1.pooler.supabase.com
- **Database**: postgres
- **SSL**: Required

### Troubleshooting

#### Error: "Target database is not up to date"
This error occurs when there are pending migrations that haven't been applied yet.

**Solution:**
```bash
# 1. Check current migration status
alembic current

# 2. Check migration history
alembic history

# 3. Apply pending migrations
alembic upgrade head

# 4. Verify current status
alembic current

# 5. Now you can generate new migrations
alembic revision --autogenerate -m "your_description"
```

#### Database Out of Sync
If tables were created directly (not through migrations):
```bash
# Mark database as up-to-date with latest migration
alembic stamp head
```